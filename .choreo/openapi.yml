openapi: 3.0.3
info:
  title: Todo App API
  version: 1.0.0
  description: RESTful API for managing todo tasks with CRUD operations, user authentication, and task management features
servers:
  - url: https://your-choreo-domain.choreoapps.dev
    description: Production server
  - url: http://localhost:3000
    description: Local development server
paths:
  /health:
    get:
      summary: Health check
      tags: [Health]
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "OK"
                  message:
                    type: string
                    example: "Todo App API is running"
                  timestamp:
                    type: string
                    format: date-time
                  version:
                    type: string
                    example: "1.0.0"

  /api/todos:
    get:
      summary: Get all todos
      tags: [Todos]
      responses:
        '200':
          description: List of todos retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a new todo
      tags: [Todos]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTodoRequest'
      responses:
        '201':
          description: Todo created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/todos/{id}:
    get:
      summary: Get a specific todo
      tags: [Todos]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Todo ID
      responses:
        '200':
          description: Todo retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '404':
          description: Todo not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update a todo
      tags: [Todos]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Todo ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTodoRequest'
      responses:
        '200':
          description: Todo updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Todo not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete a todo
      tags: [Todos]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Todo ID
      responses:
        '200':
          description: Todo deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Todo deleted successfully"
        '404':
          description: Todo not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Todo:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the todo
          example: "123e4567-e89b-12d3-a456-426614174000"
        text:
          type: string
          description: Todo task description
          example: "Complete project documentation"
        completed:
          type: boolean
          description: Completion status of the todo
          example: false
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
          example: "2024-01-15T10:30:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp
          example: "2024-01-15T10:30:00Z"
      required: [id, text, completed, createdAt]

    CreateTodoRequest:
      type: object
      properties:
        text:
          type: string
          minLength: 1
          maxLength: 500
          description: Todo task description
          example: "Complete project documentation"
      required: [text]

    UpdateTodoRequest:
      type: object
      properties:
        text:
          type: string
          minLength: 1
          maxLength: 500
          description: Todo task description
          example: "Complete project documentation"
        completed:
          type: boolean
          description: Completion status of the todo
          example: true

    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: "Validation failed"
        message:
          type: string
          description: Detailed error message
          example: "Text is required and must be between 1 and 500 characters"
        timestamp:
          type: string
          format: date-time
          description: Error timestamp
          example: "2024-01-15T10:30:00Z"

tags:
  - name: Health
    description: Health check operations
  - name: Todos
    description: Todo management operations
